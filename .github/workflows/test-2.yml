name: a test 2

on:
  workflow_dispatch:

jobs:
  build-1:
    runs-on: ${{ matrix.runs-on }}
    container: alpine:edge
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        runs-on: ["ubuntu-24.04", "ubuntu-24.04-arm"]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: update
        run: apk update && apk add bash

      - name: test
        run: bash test.sh

  build-2:
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        runs-on: ["ubuntu-24.04", "ubuntu-24.04-arm"]

    env:
      container_name: "multiarch"

    steps:
      - name: Checkout ${{ inputs.distinct_id }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Host - Create docker ${{ env.multiarch }} container ${{ inputs.distinct_id }}
        run: |
          # We create an Alpine edge container for cross-compilation with a user named gh which has same id as runner 1001 and provide sudo access
          # This way we can run commands as a non-root user, avoiding permission issues on host runner. Switching between user and root as needed.
          docker run --name ${container_name} -it -d -w /home/gh -v ${{ github.workspace }}:/home/gh alpine:edge
          # Create the user gh with the id 1001:1001 which is the same as the runner user id and group id.
          docker exec ${container_name} sh -c 'adduser -h /home/gh -Ds /bin/bash -u 1001 gh && apk add sudo'
          # Allow the user gh to run sudo without password prompt: docker exec -u gh:gh ${container_name} sudo ls
          docker exec ${container_name} sh -c 'printf "%s" "gh ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/gh'

      - name: a test
        run: apk update && apk add bash

      - name: Docker
        run: docker exec ${container_name} sh -c 'apk update && apk add bash'

      - name: a test
        run: docker exec ${container_name} bash -c './test.sh'
